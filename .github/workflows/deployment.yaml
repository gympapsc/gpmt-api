on: [release, push]

name: Deployment to AKS

env:
    CLUSTER_NAME: GPMTCluster
    RESOURCE_GROUP: GPMTResourceGroup
    REGISTRY_SECRET_NAME: registry-token
    VERSION: v1
    
jobs:
    testing:
      name: Testing
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      
      - name: Install gpmt-api dependencies
        run: npm ci
      
      - name: Run jest tests
        run: npm run test

      - name: Upload coverage data
        uses: actions/upload-articat@v2
        with:
          name: coverage
          path: ./coverage

    build:
      name: Build and push containers to ACR
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      
      - name: ACR login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build container
        run: docker build ./ -t ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-api:${{ env.VERSION }}
      
      - name: Push container
        run: docker push ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/gpmt-api:${{ env.VERSION }}

        
    deploy:
      name: Deploy to AKS
      needs: build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2 
      
      - name: Set AKS cluster
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}
      
      - name: Create k8s registry secret
        uses: azure/k8s-create-secret@v1
        with:
          container-registry-url: ${{ env.REGISTRY_USERNAME }}.azurecr.io
          container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
          container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          secret-name: ${{ env.REGISTRY_SECRET_NAME }}
          namespace: "default"
          
      - name: Create k8s cosmos url secret
        uses: azure/k8s-create-secret@v1
        with:
          url: ${{ secrets.COSMOS_URL }}
          secret-name: "cosmos"
          namespace: "default"

      - uses: azure/setup-helm@v1
        with:
          version: '3.5.3'
          id: install

      - name: Fetch helm repositories
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
  
      - name: Deploy nginx ingress controller
        run: |
          helm template nginx-ingress ingress-nginx/ingress-nginx \
          --values ./manifest/nginx.values.yaml \
          --values ./manifest/prod/nginx.values.yaml \
          --namespace "default" | kubectl apply -n default -f -
      
      - name: Deploy certificate manager
        run: |
          helm upgrade --install cert-manager jetstack/cert-manager \
          --values ./manifest/cert-manager.values.yaml \
          --set installCRDs=true \
          --namespace cert-manager --create-namespace 
      
      - name: Deploy api service
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
              manifest/deployments.yaml
              manifest/services.yaml
          imagepullsecrets: |
              ${{ env.REGISTRY_SECRET_NAME }}
          namespace: "default"

      - name: Deploy api ingress
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
              manifest/prod/ingress.yaml
          namespace: "default"
